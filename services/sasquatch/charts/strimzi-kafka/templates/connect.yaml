apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: {{ .Values.cluster.name }}
  annotations:
    # Use Connect REST API to configure connectors
    strimzi.io/use-connector-resources: "false"
spec:
  image:  {{ .Values.connect.image | quote }}
  replicas: {{ .Values.connect.replicas }}
  bootstrapServers: {{ .Values.cluster.name }}-kafka-bootstrap:9093
  tls:
    trustedCertificates:
      - secretName: {{ .Values.cluster.name }}-cluster-ca-cert
        certificate: ca.crt
  authentication:
    type: tls
    certificateAndKey:
      secretName: {{ .Values.cluster.name }}-connect
      certificate: user.crt
      key: user.key
  config:
    group.id: {{ .Values.cluster.name }}-connect
    offset.storage.topic: {{ .Values.cluster.name }}-connect-offsets
    config.storage.topic: {{ .Values.cluster.name }}-connect-configs
    status.storage.topic: {{ .Values.cluster.name }}-connect-status
    # -1 means it will use the default replication factor configured in the broker
    config.storage.replication.factor: -1
    offset.storage.replication.factor: -1
    status.storage.replication.factor: -1
    key.converter: io.confluent.connect.avro.AvroConverter
    key.converter.schemas.enable: true
    key.converter.schema.registry.url: http://sasquatch-schema-registry.sasquatch:8081
    value.converter: io.confluent.connect.avro.AvroConverter
    value.converter.schemas.enable: true
    value.converter.schema.registry.url: http://sasquatch-schema-registry.sasquatch:8081
