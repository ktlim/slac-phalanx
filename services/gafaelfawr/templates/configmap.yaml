apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "gafaelfawr.fullname" . }}-config
  labels:
    {{- include "gafaelfawr.labels" . | nindent 4 }}
data:
  gafaelfawr.yaml: |
    realm: {{ required "global.host must be set" .Values.global.host | quote }}
    loglevel: {{ .Values.config.loglevel | quote }}
    session_secret_file: "/etc/gafaelfawr/secrets/session-secret"
    bootstrap_token_file: "/etc/gafaelfawr/secrets/bootstrap-token"
    database_url: {{ required "config.databaseUrl must be set" .Values.config.databaseUrl | quote }}
    database_password_file: "/etc/gafaelfawr/secrets/database-password"
    redis_url: "redis://{{ template "gafaelfawr.fullname" . }}-redis.{{ .Release.Namespace }}:6379/0"
    redis_password_file: "/etc/gafaelfawr/secrets/redis-password"
    token_lifetime_minutes: {{ .Values.config.tokenLifetimeMinutes }}
    {{- if .Values.config.proxies }}
    proxies:
      {{- range $netblock := .Values.config.proxies }}
      - {{ $netblock | quote }}
      {{- end }}
    {{- end }}
    after_logout_url: {{ required "global.baseUrl must be set" .Values.global.baseUrl }}
    {{- if .Values.config.errorFooter }}
    error_footer: {{ .Values.config.errorFooter | quote }}
    {{- end }}

    {{- if .Values.config.influxdb.enabled }}
    influxdb:
      secret_file: "/etc/gafaelfawr/secrets/influxdb-secret"
      {{- if .Values.config.issuer.influxdb.username }}
      username: {{ .Values.config.issuer.influxdb.username | quote }}
      {{- end }}
    {{- end }}

    {{- if .Values.config.github.clientId }}

    github:
      client_id: {{ .Values.config.github.clientId | quote }}
      client_secret_file: "/etc/gafaelfawr/secrets/github-client-secret"

    {{- else if .Values.config.cilogon.clientId }}

    oidc:
      client_id: {{ .Values.config.cilogon.clientId | quote }}
      client_secret_file: "/etc/gafaelfawr/secrets/cilogon-client-secret"
      {{- if .Values.config.cilogon.test }}
      login_url: "https://test.cilogon.org/authorize"
      token_url: "https://test.cilogon.org/oauth2/token"
      issuer: "https://test.cilogon.org"
      {{- else }}
      login_url: "https://cilogon.org/authorize"
      token_url: "https://cilogon.org/oauth2/token"
      {{- if .Values.config.cilogon.enrollmentUrl }}
      enrollment_url: {{ .Values.config.cilogon.enrollmentUrl | quote }}
      {{- end }}
      issuer: "https://cilogon.org"
      {{- end }}
      {{- if .Values.config.cilogon.loginParams }}
      login_params:
        {{- range $key, $value := .Values.config.cilogon.loginParams }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
      {{- if .Values.config.cilogon.redirectUrl }}
      redirect_url: {{ .Values.config.cilogon.redirectUrl | quote }}
      {{- else }}
      redirect_url: "{{ .Values.global.baseUrl }}/login"
      {{- end }}
      scopes:
        - "email"
        - "org.cilogon.userinfo"
      audience: {{ .Values.config.cilogon.clientId | quote }}

    {{- else if .Values.config.oidc.clientId }}

    oidc:
      client_id: {{ .Values.config.oidc.clientId | quote }}
      client_secret_file: "/etc/gafaelfawr/secrets/oidc-client-secret"
      {{- if .Values.config.oidc.audience }}
      audience: {{ .Values.config.oidc.audience | quote }}
      {{- else }}
      audience: {{ .Values.config.oidc.clientId | quote }}
      {{- end }}
      login_url: {{ required "config.oidc.loginUrl must be set" .Values.config.oidc.loginUrl | quote }}
      token_url: {{ required "config.oidc.tokenUrl must be set" .Values.config.oidc.tokenUrl | quote }}
      {{- if .Values.config.cilogon.enrollmentUrl }}
      enrollment_url: {{ .Values.config.cilogon.enrollmentUrl | quote }}
      {{- end }}
      issuer: {{ required "config.oidc.issuer must be set" .Values.config.oidc.issuer | quote }}
      {{- if .Values.config.oidc.redirectUrl }}
      redirect_url: {{ .Values.config.oidc.redirectUrl | quote }}
      {{- else }}
      redirect_url: "{{ .Values.global.baseUrl }}/login"
      {{- end }}
      scopes:
        {{- with .Values.config.oidc.scopes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.config.oidc.loginParams }}
      login_params:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.config.oidc.usernameClaim }}
      username_claim: {{ .Values.config.oidc.usernameClaim | quote }}
      {{- end }}
      {{- if .Values.config.oidc.uidClaim }}
      uid_claim: {{ .Values.config.oidc.uidClaim | quote }}
      {{- end }}

    {{- end }}

    {{- if .Values.config.firestore.project }}
    firestore:
      project: {{ .Values.config.firestore.project | quote }}
    {{- end }}

    {{- if .Values.config.ldap.url }}
    ldap:
      url: {{ .Values.config.ldap.url | quote }}
      base_dn: {{ required "config.ldap.baseDn must be set" .Values.config.ldap.baseDn | quote }}
      {{- if .Values.config.ldap.userDn }}
      user_dn: {{ .Values.config.ldap.userDn | quote }}
      password_file: "/etc/gafaelfawr/secrets/ldap-password"
      {{- end }}
      group_object_class: {{ .Values.config.ldap.groupObjectClass | quote }}
      group_member_attr: {{ .Values.config.ldap.groupMemberAttr | quote }}
      {{- if .Values.config.ldap.usernameBaseDn }}
      username_base_dn: {{ .Values.config.ldap.usernameBaseDn | quote }}
      username_search_attr: {{ .Values.config.ldap.usernameSearchAttr | quote }}
      {{- end }}
      {{- if .Values.config.ldap.uidBaseDn }}
      uid_base_dn: {{ .Values.config.ldap.uidBaseDn | quote }}
      uid_attr: {{ .Values.config.ldap.uidAttr | quote }}
      {{- end }}
    {{- end }}

    {{- if .Values.config.oidcServer.enabled }}
    oidc_server:
      issuer: "https://{{ .Values.global.host }}"
      key_id: "gafaelfawr"
      audience: "https://{{ .Values.global.host }}"
      key_file: "/etc/gafaelfawr/secrets/signing-key"
      secrets_file: "/etc/gafaelfawr/secrets/oidc-server-secrets"
    {{- end }}

    known_scopes:
      {{- range $key, $value := .Values.config.knownScopes }}
      {{ $key | quote }}: {{ $value | quote }}
      {{- end }}

    group_mapping:
      {{- range $key, $value := .Values.config.groupMapping }}
      {{ $key | quote }}:
        {{- range $group := $value }}
        - {{ $group | quote }}
        {{- end }}
      {{- end }}

    {{- if .Values.config.initialAdmins }}
    initial_admins:
      {{- range $admin := .Values.config.initialAdmins }}
      - {{ $admin | quote }}
      {{- end }}
    {{- end }}
