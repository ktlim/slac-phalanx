apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ template "gafaelfawr.fullname" . }}-maintenance
  labels:
    {{- include "gafaelfawr.labels" . | nindent 4 }}
spec:
  schedule: "5 * * * *"
  concurrencyPolicy: "Forbid"
  jobTemplate:
    spec:
      template:
        metadata:
          {{- with .Values.maintenance.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          labels:
            {{- include "gafaelfawr.selectorLabels" . | nindent 12 }}
            app.kubernetes.io/component: "maintenance"
        spec:
          restartPolicy: "Never"
          {{- if .Values.cloudsql.enabled }}
          serviceAccountName: {{ include "gafaelfawr.fullname" . }}
          {{- else }}
          automountServiceAccountToken: false
          {{- end }}
          containers:
            {{- if .Values.cloudsql.enabled }}
            - name: "cloud-sql-proxy"
              # Running the sidecar as normal causes it to keep running and
              # thus the Pod never exits, the Job never finishes, and the
              # CronJob gets confused.  Have the main pod signal the sidecar
              # by writing to a file on a shared emptyDir file system, and use
              # a simple watcher loop in shell in the sidecar container to
              # terminate the proxy when the main container finishes.
              #
              # Based on https://stackoverflow.com/questions/41679364/
              command:
                - "/bin/sh"
                - "-c"
              args:
                - |
                  /cloud_sql_proxy -ip_address_types=PRIVATE -instances={{ required "cloudsql.instanceConnectionName must be specified" .Values.cloudsql.instanceConnectionName }}=tcp:5432 &
                  PID=$!
                  while true; do
                    if [[ -f "/lifecycle/main-terminated" ]]; then
                      kill $PID
                      exit 0
                    fi
                    sleep 1
                  done
              image: "{{ .Values.cloudsql.image.repository }}:{{ .Values.cloudsql.image.tag }}"
              imagePullPolicy: {{ .Values.cloudsql.image.pullPolicy | quote }}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - "all"
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                runAsUser: 65532
                runAsGroup: 65532
              volumeMounts:
                - name: "lifecycle"
                  mountPath: "/lifecycle"
            {{- end }}
            - name: "gafaelfawr"
              command:
                - "/bin/sh"
                - "-c"
              args:
                - |
                  gafaelfawr maintenance
                  touch /lifecycle/main-terminated
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
              {{- with .Values.maintenance.resources }}
              resources:
                {{- toYaml . | nindent 16 }}
              {{- end }}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - "all"
                readOnlyRootFilesystem: true
              volumeMounts:
                - name: "config"
                  mountPath: "/etc/gafaelfawr"
                  readOnly: true
                - name: "lifecycle"
                  mountPath: "/lifecycle"
                - name: "secret"
                  mountPath: "/etc/gafaelfawr/secrets"
                  readOnly: true
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
          volumes:
            - name: "config"
              configMap:
                name: {{ template "gafaelfawr.fullname" . }}-config
            - name: "lifecycle"
              emptyDir: {}
            - name: "secret"
              secret:
                secretName: {{ template "gafaelfawr.fullname" . }}-secret
          {{- with .Values.maintenance.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.maintenance.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.maintenance.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
